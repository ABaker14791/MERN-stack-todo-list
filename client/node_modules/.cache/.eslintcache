[{"/Users/adambaker/Projects/Mongo-todo/client/src/index.js":"1","/Users/adambaker/Projects/Mongo-todo/client/src/App.jsx":"2"},{"size":230,"mtime":1646850829833,"results":"3","hashOfConfig":"4"},{"size":2808,"mtime":1646865187682,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9","usedDeprecatedRules":"10"},"n5i102",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/adambaker/Projects/Mongo-todo/client/src/index.js",["15"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Style from \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["16","17"],"/Users/adambaker/Projects/Mongo-todo/client/src/App.jsx",["18"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  useEffect(() => {\n    GetTodos();\n\n    console.log(todos);\n  }, []);\n\n  const GetTodos = () => {\n    fetch(API_BASE + \"/todos\")\n      .then((res) => res.json())\n      .then((data) => setTodos(data))\n      .catch((err) => console.error(\"Error: \", err));\n  };\n\n  const completeTodo = async (id) => {\n    const data = await fetch(API_BASE + \"/todo/complete/\" + id).then((res) =>\n      res.json()\n    );\n\n    setTodos((todos) =>\n      todos.map((todo) => {\n        if (todo._id === data._id) {\n          todo.complete = data.complete;\n        }\n        return todo;\n      })\n    );\n  };\n\n  const deleteTodo = async (id) => {\n    const data = await fetch(API_BASE + \"/todo/delete/\" + id, {\n      method: \"DELETE\",\n    }).then((res) => res.json());\n\n    setTodos((todos) => todos.filter((todo) => todo._id !== data._id));\n  };\n\n  const addTodo = async () => {\n    const data = await fetch(API_BASE + \"/todo/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text: newTodo,\n      }),\n    }).then((res) => res.json());\n\n    setTodos([...todos, data]);\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome, Adam</h1>\n      <h4>Your tasks</h4>\n\n      <div className=\"todos\">\n        {todos.map((todo) => (\n          <div\n            className={\"todo \" + (todo.complete ? \"is-complete\" : \"\")}\n            key={todo._id}\n            onClick={() => completeTodo(todo._id)}\n          >\n            <div className=\"checkbox\"></div>\n            <div className=\"text\"> {todo.text} </div>\n            <div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>\n              x\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"addPopup\" onClick={() => setPopupActive(true)}>\n        +\n      </div>\n\n      {popupActive ? (\n        <div className=\"popup\">\n          <div className=\"closePopup\" onClick={() => setPopupActive(false)}>\n            x\n          </div>\n          <div className=\"content\">\n            <h3>Add task</h3>\n            <input\n              type=\"text\"\n              className=\"add-todo-input\"\n              onChange={(e) => setNewTodo(e.target.value)}\n              value={newTodo}\n              autoFocus=\"autofocus\"\n            />\n            <button className=\"button\" onClick={addTodo}>\n              Create Task\n            </button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":4,"column":8,"nodeType":"21","messageId":"22","endLine":4,"endColumn":13},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":15,"column":6,"nodeType":"29","endLine":15,"endColumn":8,"suggestions":"30"},"no-unused-vars","'Style' is defined but never used.","Identifier","unusedVar","no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todos'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [todos]",{"range":"36","text":"37"},[345,347],"[todos]"]